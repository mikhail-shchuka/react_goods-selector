{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","handlerClear","document","querySelector","classList","remove","setState","handlerRemove","event","currentTarget","parentElement","select","good","add","className","this","type","onClick","goodsFromServer","map","React","Component","ReactDOM","render","getElementById"],"mappings":"+NAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCDWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,IAFlB,EAKEC,aAAe,WAAO,IAAD,EACnB,UAAAC,SAASC,cAAc,wBAAvB,SAAyCC,UAAUC,OAAO,gBAC1D,EAAKC,SAAS,CAAEN,aAAc,MAPlC,EAUEO,cAAgB,SAACC,GAAgD,IAAD,EAC9D,UAAAA,EAAMC,cAAcC,qBAApB,SAAmCN,UAAUC,OAAO,gBACpD,EAAKC,SAAS,CAAEN,aAAc,MAZlC,EAeEW,OAAS,SAACH,EAA4CI,GAAkB,IAAD,IACrE,UAAAV,SAASC,cAAc,wBAAvB,SAAyCC,UAAUC,OAAO,gBAC1D,UAAAG,EAAMC,cAAcC,qBAApB,SAAmCN,UAAUS,IAAI,gBACjD,EAAKP,SAAS,CAAEN,aAAcY,KAlBlC,4CAqBE,WAAU,IAAD,OACP,OACE,uBAAME,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGC,KAAKhB,MAAMC,aAAX,UACMe,KAAKhB,MAAMC,aADjB,gBAEG,sBAGLe,KAAKhB,MAAMC,cACV,wBACEgB,KAAK,SACLF,UAAU,aACVG,QAASF,KAAKd,aAHhB,sBAUJ,6BACGiB,EAAgBC,KAAI,SAAAP,GAAI,OACvB,qBAAIE,UAAU,OAAd,UACGF,EACA,EAAKb,MAAMC,eAAiBY,GAC3B,wBACEI,KAAK,SACLF,UAAU,eACVG,QAAS,EAAKV,cAHhB,oBASD,EAAKR,MAAMC,eAAiBY,GAC3B,wBACEI,KAAK,SACLF,UAAU,eACVG,QAAS,SAACT,GACR,EAAKG,OAAOH,EAAOI,IAJvB,mCAzDhB,GAAyBQ,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACArB,SAASsB,eAAe,W","file":"static/js/main.12b31391.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: '',\n  };\n\n  handlerClear = () => {\n    document.querySelector('.Good--active')?.classList.remove('Good--active');\n    this.setState({ selectedGood: '' });\n  };\n\n  handlerRemove = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.currentTarget.parentElement?.classList.remove('Good--active');\n    this.setState({ selectedGood: '' });\n  };\n\n  select = (event: React.MouseEvent<HTMLButtonElement>, good: string) => {\n    document.querySelector('.Good--active')?.classList.remove('Good--active');\n    event.currentTarget.parentElement?.classList.add('Good--active');\n    this.setState({ selectedGood: good });\n  };\n\n  render() {\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.state.selectedGood\n              ? `${this.state.selectedGood} is selected`\n              : 'No goods selected'}\n          </h1>\n\n          {this.state.selectedGood && (\n            <button\n              type=\"button\"\n              className=\"App__clear\"\n              onClick={this.handlerClear}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li className=\"Good\">\n              {good}\n              {this.state.selectedGood === good && (\n                <button\n                  type=\"button\"\n                  className=\"Good__remove\"\n                  onClick={this.handlerRemove}\n                >\n                  Remove\n                </button>\n              )}\n\n              {this.state.selectedGood !== good && (\n                <button\n                  type=\"button\"\n                  className=\"Good__select\"\n                  onClick={(event) => {\n                    this.select(event, good);\n                  }}\n                >\n                  Select\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}